[
    {
        "question": "Process of removing an element from stack is called __________",
        "optionA": "Create",
        "optionB": "Push",
        "optionC": "Evaluation",
        "optionD": "Pop",
        "answer": "Pop"
    },

    {
        "question": "Process of inserting an element in stack is called ____________",
        "optionA": "Create",
        "optionB": "Push",
        "optionC": "Evaluation",
        "optionD": "Pop",
        "answer": "Push"
    },

    {
        "question": "In a stack, if a user tries to remove an element from an empty stack it is called _________",
        "optionA": "Underflow",
        "optionB": "Empty collection",
        "optionC": "Overflow",
        "optionD": "Garbage Collection",
        "answer": "Underflow"
    },

    {
        "question": "Pushing an element into stack already having five elements and stack size of 5, then stack becomes ___________",
        "optionA": "Overflow",
        "optionB": "Crash",
        "optionC": "Underflow",
        "optionD": "User flow",
        "answer": "Overflow"
    },

    {
        "question": "Which of the following is not the application of stack?",
        "optionA": "A parentheses balancing program",
        "optionB": "Tracking of local variables at run time",
        "optionC": "Compiler Syntax Analyzer",
        "optionD": "Data Transfer between two asynchronous process",
        "answer": "Data Transfer between two asynchronous process"
    },

    {
        "question": "Entries in a stack are “ordered”. What is the meaning of this statement?",
        "optionA": "A collection of stacks is sortable",
        "optionB": "Stack entries may be compared with the ‘<‘ operation",
        "optionC": "The entries are stored in a linked list",
        "optionD": "There is a Sequential entry that is one by one",
        "answer": "There is a Sequential entry that is one by one"
    },

    {
        "question": "Consider the usual algorithm for determining whether a sequence of parentheses is balanced. The maximum number of parentheses that appear on the stack AT ANY ONE TIME when the algorithm analyzes: (()(())(()))?",
        "optionA": "2",
        "optionB": "1",
        "optionC": "3",
        "optionD": "4 or more",
        "answer": "3"
    },

    {
        "question": "What is the value of the postfix expression 6 3 2 4 + – *?",
        "optionA": "1",
        "optionB": "40",
        "optionC": "74",
        "optionD": "-18",
        "answer": "-18"
    },

    {
        "question": "Here is an infix expression: 4 + 3*(6*3-12). Suppose that we are using the usual stack algorithm to convert the expression from infix to postfix notation. The maximum number of symbols that will appear on the stack AT ONE TIME during the conversion of this expression?",
        "optionA": "1",
        "optionB": "2",
        "optionC": "3",
        "optionD": "4",
        "answer": "4"
    },

    {
        "question": "Consider the usual algorithm for determining whether a sequence of parentheses is balanced. Suppose that you run the algorithm on a sequence that contains 2 left parentheses and 3 right parentheses (in some order). The maximum number of parentheses that appear on the stack AT ANY ONE TIME during the computation?",
        "optionA": "1",
        "optionB": "2",
        "optionC": "3",
        "optionD": "4 or more",
        "answer": "2"
    },

    {
        "question": "The postfix form of the expression (A+ B)*(C*D- E)*F / G is?",
        "optionA": "AB+ CD*E – FG /**",
        "optionB": "AB + CD* E – F **G /",
        "optionC": "AB + CD* E – *F *G /",
        "optionD": "AB + CDE * – * F *G /",
        "answer": "AB + CD* E – *F *G /"
    },

    {
        "question": "The data structure required to check whether an expression contains a balanced parenthesis is?",
        "optionA": "Stack",
        "optionB": "Queue",
        "optionC": "Array",
        "optionD": "Tree",
        "answer": "Stack"
    },

    {
        "question": "What data structure would you mostly likely see in non recursive implementation of a recursive algorithm?",
        "optionA": "Linked List",
        "optionB": "Stack",
        "optionC": "Queue",
        "optionD": "Tree",
        "answer": "Stack"
    },

    {
        "question": "The process of accessing data stored in a serial access memory is similar to manipulating data on a ________",
        "optionA": "Heap",
        "optionB": "Binart Tree",
        "optionC": "Array",
        "optionD": "Stack",
        "answer": "Stack"
    },

    {
        "question": "The postfix form of A*B+C/D is?",
        "optionA": "*AB/CD+",
        "optionB": "AB*CD/+",
        "optionC": "A*BC+/D",
        "optionD": "ABCD+/*",
        "answer": "AB*CD/+"
    }
]
